#!/usr/bin/env python
# encoding: utf-8

import os

APPNAME = 'libgosh'
VERSION = '1.0'

def options(ctx):
    ctx.load('gcc')

    gr = ctx.add_option_group('libgosh options')
    gr.add_option('--install-libgosh', action='store_true', help='Installs headers and lib')
    gr.add_option('--console-disable-history', action='store_true', help='Disable console history completely')
    gr.add_option('--console-history-len', metavar='LEN', default=10, type=int, help='Choose length for history')
    gr.add_option('--console-input-len', metavar='LEN', default=100, type=int, help='Choose length for input')
    gr.add_option('--gosh-const', action='store_true', help='Store GOSH commands in const (sorting will be disabled)')
    gr.add_option('--enable-gosh-redirect', action='store_true', help='Build stdio redirect server and client')
   
def configure(ctx):
    ctx.load('gcc')

    ctx.env.append_unique('FILES_LIBGOSH', ['src/**/*.c'])

    if not ctx.options.console_disable_history:
        ctx.define_cond('CONSOLE_HISTORY_ENABLE', True)
    ctx.define('CONSOLE_HISTORY_ELEMENTS', ctx.options.console_history_len)
    ctx.define('CONSOLE_BUFSIZ', ctx.options.console_input_len)
    ctx.define_cond('CONFIG_GOSH_CONST', ctx.options.gosh_const)

    if not ctx.options.enable_vmem:
        ctx.env.append_unique('EXCLUDES_LIBGOSH', ['src/gosh/cmd_vmem.c'])

    if not ctx.options.enable_gosh_redirect:
        ctx.env.append_unique('EXCLUDES_LIBGOSH', ['src/gosh/redirect/*.c'])
    else:
        ctx.env.append_unique('EXCLUDES_LIBGOSH', ['src/gosh/redirect/gosh.c'])
        ctx.env.append_unique('FILES_GOSHAPP', ['src/gosh/redirect/gosh.c'])

    # Check for time.h
    ctx.check_cc(header_name='time.h', mandatory=False, define_name='HAVE_TIME_H', type='cstlib')

    ctx.define('LIBGOSH_VERSION', VERSION)
    
    ctx.write_config_header('include/conf_gosh.h', top=True, remove=True)

def build(ctx):

    ctx(export_includes=['include'], name='gosh_h')

    if ctx.env.FILES_LIBGOSH:

        install_path = False
        if ctx.options.install_libgosh:
            install_path = '${PREFIX}/lib'
            ctx.install_files('${PREFIX}', ctx.path.ant_glob('include/**/*.h'), relative_trick=True)
            ctx.install_files('${PREFIX}/include', cwd=ctx.bldnode)

        ctx.objects(source=ctx.path.ant_glob(ctx.env.FILES_LIBGOSH, excl=ctx.env.EXCLUDES_LIBGOSH), 
            target='gosh', 
            includes='include',
            export_includes='include',
            defines = ctx.env.DEFINES_LIBGOSH,
            use=['include', 'csp', 'util'],
            install_path = install_path,
        )

        if ctx.env.FILES_GOSHAPP:
            ctx.program(
                    source=ctx.path.ant_glob(ctx.env.FILES_GOSHAPP),
                    target = 'gosh',
                    name = 'goshapp',
                    use = ['gosh_h'],
            )


